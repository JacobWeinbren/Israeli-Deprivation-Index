<div id="map" class="w-screen h-screen"></div>
<div id="geocoder" class="geocoder fixed top-4 left-4 z-10"></div>
<div
	class="sm:w-[500px] text-sm w-full flex flex-col gap-2 absolute bottom-10 rounded-md z-10 bg-white p-4 left-1/2 transform -translate-x-1/2"
>
	<div>
		<p class="text-md font-semibold" id="title">
			Socio-Economic Classification
		</p>
		<p class="mb-2">Israel (inc West Bank)</p>
	</div>
	<div>
		<div class="w-full h-4 rounded" id="gradient"></div>
		<div class="flex justify-between">
			<span id="min">Least Affluent (1)</span>
			<span id="max">Most Affluent (10)</span>
		</div>
	</div>
	<div id="hover">Hover over a point to see its value.</div>
</div>

<script>
	import mapboxgl from "mapbox-gl";
	import MapboxGeocoder from "@mapbox/mapbox-gl-geocoder";
	import chroma from "chroma-js";

	const MAPBOX_TOKEN = import.meta.env.PUBLIC_MAPBOX_TOKEN;

	const colorScale = chroma
		.scale(["#ca0020", "#f4a582", "#f7f7f7", "#92c5de", "#0571b0"])
		.mode("lch")
		.domain([0, 10]);

	function initMap() {
		const map = new mapboxgl.Map({
			container: "map",
			style: "mapbox://styles/mapbox/dark-v11",
			center: [35.2345, 31.7767],
			minZoom: 5,
			maxZoom: 17,
			zoom: 9,
			accessToken: MAPBOX_TOKEN,
			antialias: true,
		});

		map.on("load", () => {
			const firstLabelLayerId = map
				.getStyle()
				.layers.find((layer) => layer.type === "symbol").id;

			map.addSource("israel", {
				type: "vector",
				tiles: [
					"https://map.jacobweinbren.workers.dev/israel-dep/{z}/{x}/{y}.mvt",
				],
				minzoom: 0,
				maxzoom: 22,
			});

			map.addSource("israel-statistical-areas", {
				type: "vector",
				tiles: [
					"https://map.jacobweinbren.workers.dev/israel-statistical-areas/{z}/{x}/{y}.mvt",
				],
				minzoom: 0,
				maxzoom: 22,
			});

			map.addLayer({
				id: "israel-statistical-areas",
				type: "fill",
				source: "israel-statistical-areas",
				"source-layer": "maplayer",
				paint: {
					"fill-color": "rgba(0, 0, 0, 0)",
				},
			});

			map.addLayer(
				{
					id: "israel",
					type: "fill",
					source: "israel",
					"source-layer": "maplayer",
					paint: {
						"fill-color": [
							"interpolate",
							["linear"],
							["get", "CLUSTER"],
							0,
							"#ca0020",
							2.5,
							"#f4a582",
							5,
							"#f7f7f7",
							7.5,
							"#92c5de",
							10,
							"#0571b0",
						],
						"fill-opacity": 0.8,
					},
				},
				firstLabelLayerId
			);

			map.on("mousemove", (e) => {
				const features = map.queryRenderedFeatures(e.point, {
					layers: ["israel", "israel-statistical-areas"],
				});

				if (features.length > 0) {
					const feature = features[0];
					const clusterValue = feature.properties.CLUSTER.toFixed(0);
					const ordinal = (n) => {
						const s = ["th", "st", "nd", "rd"];
						const v = n % 100;
						return n + (s[(v - 20) % 10] || s[v] || s[0]);
					};
					const hoverText =
						clusterValue >= 5
							? `This area is in cluster ${clusterValue} of 10, making it the ${ordinal(
									11 - clusterValue
								)} least deprived.`
							: `This area is in cluster ${clusterValue} of 10, making it the ${ordinal(
									clusterValue
								)} most deprived.`;
					document.getElementById("hover").textContent = hoverText;
				}
			});

			map.on("mouseleave", () => {
				document.getElementById("hover").textContent =
					"Hover over a point to see its value.";
			});
		});

		const geocoder = new MapboxGeocoder({
			accessToken: MAPBOX_TOKEN,
			mapboxgl: mapboxgl,
		});
		document.getElementById("geocoder").appendChild(geocoder.onAdd(map));

		map.addControl(new mapboxgl.NavigationControl());
	}

	const gradient = document.getElementById("gradient");
	const gradientStyle = `linear-gradient(to right, ${colorScale
		.colors(5)
		.map((color) => color)
		.join(", ")})`;
	gradient.style.background = gradientStyle;

	if (typeof window !== "undefined") {
		window.onload = initMap;
	}
</script>
